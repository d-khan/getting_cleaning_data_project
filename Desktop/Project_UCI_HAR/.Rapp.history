head(s[1])
head(s)
s
s[2]
x = rnorm(10)
x
summary(x)
str()
str(x)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(20)
x= rnorm(100)
e = rnorm(100,0,2)
y = 0.5+2*x+e
summary(y)
plot(x,y)
x = c(1:10000)
x
x = c(1:1000000)
x
length(x)
plot(x)
rm(list=ls())
ls()
ls
list()
rm(list=ls())
?rm
system.time()
x
for (1:100) {
for (i=1:100){
?for
q
help(for)
?for()
for (i in 1:100)
append(x,i)
for (i in 1:100) {
append(x,i)
}
x = c()
for (i in 1:100) {
append(x,i)
}
x
for (i in 1:100){
print (i)
}
x
append(x,i)
x
x = append(x,i)
x
x = append(x,2)
x
rm x
rm(x)
x
x = c()
for (i in 1:100){
x = append(x,i)
}
x
for (i in 1:100000){
x = append(x,i)
}
x
x#
x
x#
x#
}
x#
x#
}#
x
x#
x#
}#
x#
q
system.time(x)
?svd
hilbert = function(n) {
i = 1:n
1 / outer(i-1, i, "+") }
x = hilbert(1000)
system.time(svd(x))
for (i in 1:100) {
print (i)}
x = c()
system.time({
for (i in 1:100) {
x = append(x,i) }
})
x = c()#
system.time({#
for (i in 1:100) {#
x = append(x,i) }#
})
x
x = c()#
system.time({#
for (i in 1:100) {#
x = append(x,i) }#
})
x = c()#
system.time({#
for (i in 1:100000) {#
x = append(x,i) }#
})
system.time({#
	y = c(1:100000)})
y
system.time({#
	y = c(1:100000)})
t = system.time({#
	y = c(1:100000)})
t
x = c()#
t = system.time({#
for (i in 1:100000) {#
x = append(x,i) }#
})
t
x = c()#
t = system.time({#
for (i in 1:100000) {#
x = append(x,i) }#
})
rm(list=ls())
ls()
x
y
t
str(t)
rm t
rm(t)
t
class(t)
t
summaryRprof()
Rprof()
x = c(1:100)
c
x
class(x)
Rprof(x)
$sample.interval
sample.interval
set.seed(1)
rpois(5,2)
?rnorm
system.time()
x = c(1:1000)
system.time(x)
?system.time()
?qpois
?ppois
library(datasets)#
Rprof()#
fit = lm(y ~ x1+x2)#
Rprof(NULL)
library(datasets)#
Rprof()#
fit = lm(y ~ x1+x2)
?lm
load.packages('dplyr')
install.packages('plyr')
library(dplyr)
union()
?union
install.packages('RMySQL')
uscDb = dbConnect(MySQL(),user='genome',host='genome-mysql.cse.ucsc.edu')
library('RMySQL')
uscDb = dbConnect(MySQL(),user='genome',host='genome-mysql.cse.ucsc.edu')
result = dbGetQuery(ucscDb,'show databases;')
uscDb = dbConnect(MySQL(),user='genome',host='genome-mysql.cse.ucsc.edu')
result = dbGetQuery(ucscDb,'show databases;')
ucscDb = dbConnect(MySQL(),user='genome',host='genome-mysql.cse.ucsc.edu')
result = dbGetQuery(ucscDb,'show databases;')
result
install.packages('reshape2')#
install.packages('dplyr')#
library(reshape2)#
library(dplyr)#
#
###### Notes for Reviewer #########
## tidy_dataset object contain tidy set with the average of each variable for each activity and each subject ###
#
#############Points 1 & 3######################
#
# Load test data and feature in R#
test = read.table('./test/X_test.txt',sep='')#
feature = read.table('./features.txt',sep='')#
colnames(test) = feature$V2#
#
# Read test activity#
test_activity = read.table('./test/y_test.txt')#
#
# Bind Activity and entire measurements of test set in one data frame and change column name#
test = cbind.data.frame(test_activity,test)#
colnames(test)[1] = 'Activity'#
#
#Change activity number to activity name#
test[test$Activity==1,1] = 'Walking';test[test$Activity==2,1] = 'Walking_Upstairs';test[test$Activity==3,1] = 'Walking_Downstairs';test[test$Activity==4,1] = 'Sitting';test[test$Activity==5,1] = 'Standing';test[test$Activity==6,1] = 'Laying'#
#
#Read test subject ID, bind 'Subject' with existing 'test' data frame and change column name#
subject_test = read.table('./test/subject_test.txt',sep='')#
test = cbind.data.frame(subject_test,test)#
colnames(test)[1] = 'Subject'#
#
# Load train data in R#
train = read.table('./train/X_train.txt',sep='')#
colnames(train) = feature$V2#
#
# Read train activity in R, bind with 'train' data frame and change column name#
train_activity = read.table('./train/y_train.txt')#
train = cbind.data.frame(train_activity,train)#
colnames(train)[1] = 'Activity'#
#
# Change activity number to activity name#
train[train$Activity==1,1] = 'Walking';train[train$Activity==2,1] = 'Walking_Upstairs';train[train$Activity==3,1] = 'Walking_Downstairs';train[train$Activity==4,1] = 'Sitting';train[train$Activity==5,1] = 'Standing';train[train$Activity==6,1] = 'Laying'#
#
# Read train subject ID, bind 'Subject' with existing 'train' data frame and change column name#
subject_train = read.table('./train/subject_train.txt',sep='')#
train = cbind.data.frame(subject_train,train)#
colnames(train)[1] = 'Subject'#
#
# Merge train and test data set into one set #
train_test = rbind(train,test)#
#
#############Point 2######################
#
# Using regular expression to extract mean() and std() column names #
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)#
s = grep(c('std()'),colnames(train_test),fixed=TRUE)#
train_test_extract = select(train_test,c(1,2,m,s))#
#
#############Point 4######################
#
# Using regular expression to change variable names with descriptive variable names#
names(train_test_extract) = gsub('mean\\(\\)','mean',names(train_test_extract))#
names(train_test_extract) = gsub('std\\(\\)','sd',names(train_test_extract))#
names(train_test_extract) = gsub('-','_',names(train_test_extract))#
#
#############Point 5######################
#
# Create a second independent tidy data set with the average of each variable for each activity and each subject#
temp = melt(train_test_extract,id=c('Subject','Activity'))#
tidy_dataset = dcast(temp,Subject+Activity ~ variable, mean)#
#
# Write second tidy set into text file#
write.table(tidy_dataset,file='tidy_dataset.txt',row.name=FALSE,col.name=TRUE)
install.packages('reshape2')#
install.packages('dplyr')#
library(reshape2)#
library(dplyr)#
#
###### Notes for Reviewer #########
## tidy_dataset object contain tidy set with the average of each variable for each activity and each subject ###
#
#############Points 1 & 3######################
#
# Load test data and feature in R#
test = read.table('./test/X_test.txt',sep='')#
feature = read.table('./features.txt',sep='')#
colnames(test) = feature$V2#
#
# Read test activity#
test_activity = read.table('./test/y_test.txt')#
#
# Bind Activity and entire measurements of test set in one data frame and change column name#
test = cbind.data.frame(test_activity,test)#
colnames(test)[1] = 'Activity'#
#
#Change activity number to activity name#
test[test$Activity==1,1] = 'Walking';test[test$Activity==2,1] = 'Walking_Upstairs';test[test$Activity==3,1] = 'Walking_Downstairs';test[test$Activity==4,1] = 'Sitting';test[test$Activity==5,1] = 'Standing';test[test$Activity==6,1] = 'Laying'#
#
#Read test subject ID, bind 'Subject' with existing 'test' data frame and change column name#
subject_test = read.table('./test/subject_test.txt',sep='')#
test = cbind.data.frame(subject_test,test)#
colnames(test)[1] = 'Subject'#
#
# Load train data in R#
train = read.table('./train/X_train.txt',sep='')#
colnames(train) = feature$V2#
#
# Read train activity in R, bind with 'train' data frame and change column name#
train_activity = read.table('./train/y_train.txt')#
train = cbind.data.frame(train_activity,train)#
colnames(train)[1] = 'Activity'#
#
# Change activity number to activity name#
train[train$Activity==1,1] = 'Walking';train[train$Activity==2,1] = 'Walking_Upstairs';train[train$Activity==3,1] = 'Walking_Downstairs';train[train$Activity==4,1] = 'Sitting';train[train$Activity==5,1] = 'Standing';train[train$Activity==6,1] = 'Laying'#
#
# Read train subject ID, bind 'Subject' with existing 'train' data frame and change column name#
subject_train = read.table('./train/subject_train.txt',sep='')#
train = cbind.data.frame(subject_train,train)#
colnames(train)[1] = 'Subject'#
#
# Merge train and test data set into one set #
train_test = rbind(train,test)#
#
#############Point 2######################
#
# Using regular expression to extract mean() and std() column names #
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)#
s = grep(c('std()'),colnames(train_test),fixed=TRUE)#
train_test_extract = select(train_test,c(1,2,m,s))#
#
#############Point 4######################
#
# Using regular expression to change variable names with descriptive variable names#
names(train_test_extract) = gsub('mean\\(\\)','mean',names(train_test_extract))#
names(train_test_extract) = gsub('std\\(\\)','sd',names(train_test_extract))#
names(train_test_extract) = gsub('-','_',names(train_test_extract))#
#
#############Point 5######################
#
# Create a second independent tidy data set with the average of each variable for each activity and each subject#
temp = melt(train_test_extract,id=c('Subject','Activity'))#
tidy_dataset = dcast(temp,Subject+Activity ~ variable, mean)#
#
# Write second tidy set into text file#
write.table(tidy_dataset,file='tidy_dataset.txt',row.name=FALSE,col.name=TRUE)
str(train_test)
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)
m
s = grep(c('std()'),colnames(train_test),fixed=TRUE)
s
train_test_extract = select(train_test,c(1,2,m,s))
str(train_test)
train_test_extract = select(train_test,c(1,2,m,s))
m
s
train_test_extract = select(train_test,c(m,s))
train_test_extract = select(train_test,c(1,2))
train_test_extract = select(train_test,c(1))
train_test_extract = select(train_test,1)
colnames(train_test)
unique(colnames(train_test))
length(unique(colnames(train_test)))
length(colnames(train_test))
colnames(train_test)
library(reshape2)#
library(dplyr)#
#############Points 1 & 3######################
test = read.table('./test/X_test.txt',sep='')#
#
feature = read.table('./features.txt',sep='')#
#
colnames(test) = feature$V2#
#
test_activity = read.table('./test/y_test.txt')#
#
test = cbind.data.frame(test_activity,test)#
#
colnames(test)[1] = 'Activity'#
#
test[test$Activity==1,1] = 'Walking';test[test$Activity==2,1] = 'Walking_Upstairs';test[test$Activity==3,1] = 'Walking_Downstairs';test[test$Activity==4,1] = 'Sitting';test[test$Activity==5,1] = 'Standing';test[test$Activity==6,1] = 'Laying'#
#
subject_test = read.table('./test/subject_test.txt',sep='')#
#
test = cbind.data.frame(subject_test,test)#
#
colnames(test)[1] = 'Subject'#
train = read.table('./train/X_train.txt',sep='')#
#
colnames(train) = feature$V2#
#
train_activity = read.table('./train/y_train.txt')#
#
train = cbind.data.frame(train_activity,train)#
#
colnames(train)[1] = 'Activity'#
#
train[train$Activity==1,1] = 'Walking';train[train$Activity==2,1] = 'Walking_Upstairs';train[train$Activity==3,1] = 'Walking_Downstairs';train[train$Activity==4,1] = 'Sitting';train[train$Activity==5,1] = 'Standing';train[train$Activity==6,1] = 'Laying'#
#
subject_train = read.table('./train/subject_train.txt',sep='')#
#
train = cbind.data.frame(subject_train,train)#
#
colnames(train)[1] = 'Subject'#
#
train_test = rbind(train,test)#
#
#############Point 2######################
#
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)#
s = grep(c('std()'),colnames(train_test),fixed=TRUE)#
train_test_extract = select(train_test,c(1,2,m,s))
train_test_extract
colnames(test)
length(colnames(test))
unique(length(colnames(test)))
length(colnames(train))
unique(length(colnames(train)))
str(train)
unique(length(colnames(train_test)))
length(colnames(train_test))
head(train_test)
head(test)
dim(train)
dim(test)
test_train[7352,]
train_test[7352,]
train_test[7351,]
train_test[7352,]
train_test[7353,]
train_test[7352,]
test[1,]
dim(train)
dim(test)
dim(train_test)
str(test_train)
str(train_test)
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)#
s = grep(c('std()'),colnames(train_test),fixed=TRUE)
train_test_extract = select(train_test,c(1,2,m,s))
m
train_test[1,1]
train_test[,1]
m
train_test_extract = select(train_test,c(1,2,m,s))
str(train_test)
str(train_test)
dim(train_test)
dim(trai)
dim(train)
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)#
s = grep(c('std()'),colnames(train_test),fixed=TRUE)
train_test[grepl('mean()',colnames(train_test)),]
t = train_test[grepl('mean()',colnames(train_test)),]
str(t)
t = train_test[grepl('mean\\(\\)',colnames(train_test)),fixed=TRUE]
t = train_test[grepl('mean\\(\\)',colnames(train_test),fixed=TRUE),]
str(t)
t = train_test[,grepl('mean\\(\\)',colnames(train_test),fixed=TRUE)]
str(t)
t = train_test[,grepl('mean()',colnames(train_test),fixed=TRUE)]
str(t)
class(t)
m = train_test[,grepl('mean()',colnames(train_test),fixed=TRUE)]
m = train_test[,grepl('mean()&'Activity',colnames(train_test),fixed=TRUE)]
m = train_test[,grepl('mean()&'Activity'),colnames(train_test),fixed=TRUE)]
m = train_test[,grepl('mean()&Activity'),colnames(train_test),fixed=TRUE)]
m = train_test[,grepl('mean()&Ac'),colnames(train_test),fixed=TRUE)]
m = grep(c('mean()'),colnames(train_test),fixed=TRUE)
s = grep(c('std()'),colnames(train_test),fixed=TRUE)
m
s
select(train_test,1:5)
select(train_test,1)
train_test[,400:420]
colnames(train_test)
duplicated(colnames(train_test))
colnames(train_test)
duplicated(colnames(train_test))
train_test[,307]
head(train_test[,307],10)
head(train_test[,321],10)
colnames(train_test)
duplicated(colnames(train_test))
colnames(train_test)
dim(test)
m
s
danish = train_test[,c(1,2,m,s)]
str(danish)
length(m)
length(s)
